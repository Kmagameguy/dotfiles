---
- name: Ensure dotfiles repo is cloned.
  git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ dotfiles_repo_local_destination }}"
    version: "{{ dotfiles_repo_version }}"
    accept_hostkey: "{{ dotfiles_repo_accept_hostkey }}"
  become: false

- name: Ensure all configured dotfiles are symlinks.
  command: "ls -F {{ dotfiles_destination }}/{{ item }}"
  register: existing_dotfile_info
  failed_when: false
  check_mode: false
  changed_when: false
  with_items: "{{ dotfiles_files }}"

- name: Remove existing dotfile if a replacement is being linked.
  file:
    path: "{{ dotfiles_destination }}/{{ dotfiles_files[item.0] }}"
    state: absent
  when: "'@' not in item.1.stdout"
  with_indexed_items: "{{ existing_dotfile_info.results }}"

- name: Ensure parent folders of link dotfiles exist.
  file:
    path: "{{ (dotfiles_destination ~ '/' ~ item) | dirname }}"
    state: directory
    follow: true
  become: false
  with_items: "{{ dotfiles_files }}"

- name: Link dotfiles into destination folder.
  file:
    src: "{{ dotfiles_repo_local_destination }}/dotfiles/{{ item }}"
    dest: "{{ dotfiles_destination }}/{{ item }}"
    state: link
  become: false
  with_items: "{{ dotfiles_files }}"
